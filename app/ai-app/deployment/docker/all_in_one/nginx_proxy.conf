events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
    ''      close;
    }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=kb_api_zone:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=chat_api_zone:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=monitoring_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # Backend service definitions
    upstream web_ui {
        server web-ui:80;
    }

    upstream kb_api {
        server kb:8000;
    }

    upstream chat_api {
        server chat:8010;
    }

    upstream monitoring_api {
        server chat:8010;
    }


    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Security settings
    server_tokens off;
    client_max_body_size 100M;

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # CORS headers for API endpoints
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;


        #############
        # KB Routes #
        #############

        location /api/kb/ {
            # limit_req zone=kb_api_zone burst=10 nodelay;

            proxy_pass http://kb_api/api/kb/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/chat/ {
            # limit_req zone=kb_api_zone burst=10 nodelay;
            proxy_pass http://chat_api/api/chat/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/data/ {
            # limit_req zone=kb_api_zone burst=10 nodelay;

            proxy_pass http://kb_api/api/data/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/files/ {
            # limit_req zone=kb_api_zone burst=10 nodelay;

            proxy_pass http://kb_api/api/files/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location = /api/spending {
            # limit_req zone=kb_api_zone burst=10 nodelay;

            proxy_pass http://kb_api/api/spending;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location = /api/events {
            # limit_req zone=kb_api_zone burst=10 nodelay;

            proxy_pass http://kb_api/api/event;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/kb/upload {
            # limit_req zone=upload burst=5 nodelay;
            client_max_body_size 500M;

            proxy_pass http://kb_api/api/kb/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for large uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        location /kb/socket.io/ {
            proxy_pass http://kb_api/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header Origin $http_origin;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
        }

        #############
        # CB Routes #
        #############

        location = /profile {
            # limit_req zone=chat_api_zone burst=10 nodelay;

            proxy_pass http://chat_api/profile;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /landing {
            # limit_req zone=chat_api_zone burst=10 nodelay;

            proxy_pass http://chat_api/landing;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /monitoring {
            # limit_req zone=monitoring_api burst=10 nodelay;

            proxy_pass http://chat_api/monitoring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /cb/socket.io/ {
            proxy_pass http://chat_api/socket.io/;    # rewrite /cb -> /socket.io
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Host $host;
            proxy_set_header Origin $http_origin;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
        }

        # CB Resources API
        # POST /api/cb/resources
        location = /api/cb/resources {
            # Optional: bump if you POST big payloads
            client_max_body_size 500M;

            # Keep the URI exactly as-is for the backend
            proxy_pass http://chat_api;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_send_timeout    600s;
            proxy_read_timeout    600s;

            # If your backend doesn't handle CORS preflight here, uncomment:
            # if ($request_method = OPTIONS) { return 204; }
        }

        # GET /api/cb/resources/{tenant}/{project}/conv/{owner_id}/{conversation_id}/turn/{turn_id}/attachment/{filename}/download
        location ^~ /api/cb/resources/ {
            # Preserve full URI for the backend
            proxy_pass http://chat_api;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Stream large downloads efficiently
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # Integrations API
        location /integrations/ {
            # If your backend already expects the full path starting with /integrations,
            # keep proxy_pass WITHOUT a path to preserve the URI as-is:
            proxy_pass http://chat_api;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: handle CORS preflight here if your backend doesn't:
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin      $http_origin always;
                add_header Access-Control-Allow-Methods     "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers     "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                return 204;
            }

            # Timeouts/body size as needed
            client_max_body_size 50M;
            proxy_connect_timeout 30s;
            proxy_send_timeout    60s;
            proxy_read_timeout    60s;
        }
        location /admin/integrations/ {
            # If your backend already expects the full path starting with /integrations,
            # keep proxy_pass WITHOUT a path to preserve the URI as-is:
            proxy_pass http://chat_api;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: handle CORS preflight here if your backend doesn't:
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin      $http_origin always;
                add_header Access-Control-Allow-Methods     "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers     "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                return 204;
            }

            # Timeouts/body size as needed
            client_max_body_size 50M;
            proxy_connect_timeout 30s;
            proxy_send_timeout    60s;
            proxy_read_timeout    60s;
        }

        # Static assets with long-term caching
        # location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        #    proxy_pass http://web_ui;
        #    proxy_set_header Host $host;

        # Cache static assets
        #    expires 1y;
        #    add_header Cache-Control "public, immutable";

        # Optional: serve from nginx if files are mounted
        # try_files $uri @web_ui;
        #}

        # Web UI - fallback for SPA routing
        location / {
            proxy_pass http://web_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # SPA fallback
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # SPA fallback location
        location @fallback {
            proxy_pass http://web_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}