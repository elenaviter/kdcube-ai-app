services:
  postgres-db:
    container_name: kdcube-local-postgres
    image: pgvector/pgvector:pg16
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "5434:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    container_name: kdcube-local-redis
    image: redis:latest
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 10

#  keycloak:
#    image: quay.io/keycloak/keycloak:26.3
#    container_name: keycloak
#    env_file:
#      - .env
#    environment:
#      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
#      KC_HOSTNAME_PORT: ${KEYCLOAK_HOSTNAME_PORT:-8080}
#      KC_HOSTNAME_STRICT: ${KEYCLOAK_HOSTNAME_STRICT:-false}
#      KC_HOSTNAME_STRICT_HTTPS: ${KEYCLOAK_HOSTNAME_STRICT_HTTPS:-false}
#      KC_HTTP_ENABLED: ${KEYCLOAK_HTTP_ENABLED:-true}
#      KC_HEALTH_ENABLED: ${KEYCLOAK_HEALTH_ENABLED:-true}
#      KC_METRICS_ENABLED: ${KEYCLOAK_METRICS_ENABLED:-true}
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres-db
#    restart: unless-stopped
#    command: start-dev
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
#      interval: 15s
#      timeout: 5s
#      retries: 20

  neo4j:
    container_name: kdcube-neo4j
    image: neo4j:5
    env_file: [.env]
    environment:
      # Correct v5 keys (server.memory.*)
      NEO4J_AUTH: "${N4J_USER}/${N4J_PASSWORD}"
      NEO4J_server_memory_pagecache_size: ${N4J_PAGECACHE:-1G}
      NEO4J_server_memory_heap_initial__size: ${N4J_HEAP_INITIAL:-512m}
      NEO4J_server_memory_heap_max__size: ${N4J_HEAP_MAX:-1G}

      # APOC plugin
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-plugins:/plugins
      - neo4j-import:/var/lib/neo4j/import
    healthcheck:
      # Use the renamed vars in healthcheck
      test: ["CMD-SHELL", "cypher-shell -u $$N4J_USER -p $$N4J_PASSWORD 'RETURN 1' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres

  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis

  neo4j-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/data

  neo4j-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/logs

  neo4j-plugins:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/plugins

  neo4j-import:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/neo4j/import

networks:
  default:
    name: kdcube-local-net
